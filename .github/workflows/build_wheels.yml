name: Build

on: [ push, pull_request ]

jobs:
  build_quick:
    name: Fast wheel build
    runs-on: ubuntu-20.04
    if: github.event_name == 'push' && startsWith(github.event.ref, 'develop')
    steps:
      - uses: actions/checkout@v2

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.3.1
        env:
          CIBW_BUILD: cp310-manylinux_x86_64

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    timeout-minutes: 15
    runs-on: ${{ matrix.os }}
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    strategy:
      matrix:
        os: [ ubuntu-20.04, windows-2019, macos-10.15 ]

    steps:
      - uses: actions/checkout@v2

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.3.1
        env:
          CIBW_ARCHS_LINUX: x86_64
          CIBW_ARCHS_MACOS: native
          CIBW_ARCHS_WINDOWS: AMD64
          CIBW_SKIP: 'pp* cp36-* *-musllinux_*'

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  make_sdist:
    name: Make SDist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Optional, use if you use setuptools_scm
          submodules: true  # Optional, use if you have submodules

      - name: Build SDist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  upload_all:
    needs: [ build_wheels, make_sdist ]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
          skip_existing: true
